from my_timer import timed
from prime_numbers import count_factors_with_primes, sieve

# A dict of triangular numbers
tnum = {1: 1, 2: 3, 3: 6}


def find_tnum(x):
    """Find the x'th triangular number.
    A triangular number is generated by adding the natural numbers.

    :param x: The triangular number to get
    :return: The x'th triangular number
    """
    if x not in tnum:
        tnum[x] = find_tnum(x-1) + x
    return tnum[x]


@timed
def pe_prob_012(x):
    """Find the first triangle number to have over x divisors

    :return: The first triangular number to have over x divisors
    """
    i = 1
    primes = sieve(2000000)
    while not count_factors_with_primes(find_tnum(i), primes) > x:
        i += 1
    return tnum[i]


if __name__ == '__main__':
    print pe_prob_012(500)
